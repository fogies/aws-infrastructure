---

- name: Install Docker and Configure for Non-Sudo Availability
  hosts: 127.0.0.1
  connection: local
  
  vars:
    # Expected from BUILD_CONFIG:
    # - version_ubuntu_name

  tasks:
    #
    # Install Docker
    #
    
    - name: Add Docker Repository Key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
    
    - name: Add Docker Repository
      become: yes
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ version_ubuntu_name }} stable

    - name: Install Docker
      become: yes
      apt:
        update_cache: yes
        pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        
    #
    # Configure non-sudo access for user ubuntu. This will then require a reboot.
    #
        
    - name: Create Docker Group
      become: yes
      group:
        name: ubuntu

    - name: Add to Docker Group
      become: yes
      user:
        name: ubuntu
        groups: docker
        append: yes

    #
    # Configure cgroups required for Docker memory management. This will then require a reboot.
    #
    # https://fabianlee.org/2020/01/18/docker-placing-limits-on-container-memory-using-cgroups/
    #

    - name: Enable Docker Memory Managment
      become: yes
      replace:
        path: /etc/default/grub.d/50-cloudimg-settings.cfg
        regexp: ^GRUB_CMDLINE_LINUX_DEFAULT=\"(.*)\"$
        replace: GRUB_CMDLINE_LINUX_DEFAULT="\1 cgroup_enable=memory swapaccount=1"

    - name: Update GRUB
      become: yes
      command:
        cmd: update-grub

    #
    # Start Docker
    #
    
    - name: Start Docker
      become: yes
      systemd:
        name: docker
        enabled: yes
        state: started

    #
    # Confirm Docker is accessible via sudo.
    #
    
    - name: Confirm Sudo Docker Installation
      become: yes
      command: 
        cmd: docker version
        
    #
    # Packer will now need to restart the machine.
    #   
